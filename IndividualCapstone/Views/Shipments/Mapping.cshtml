@model List<IndividualCapstone.Models.Shipment>

@{
    ViewBag.Title = "Mapping";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>

<h2>Mapping</h2>

<div id="map"></div>
<div id="directions-panel"></div>
<script>
     var map;
    function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsRenderer = new google.maps.DirectionsRenderer;

        map = new google.maps.Map(
            document.getElementById('map'),
            { center: new google.maps.LatLng("42.948650", "-87.909540"), zoom: 16 });
        directionsRenderer.setMap(map);
        calculateAndDisplayRoute(directionsService, directionsRenderer);
        // students is a javascript array that will look like this:
        // students = [{"FirstName":"fn1","LastName":"ln1"}, {"FirstName":"fn2","LastName":"ln2"}, ...];
    }
    function calculateAndDisplayRoute(directionsService, directionsRenderer) {
        var shipmentAddress = @Html.Raw(Json.Encode(Model));
        var waypts = [];
        for (var i = 0; i < @Model.Count; i++) {
            let address = shipmentAddress[i].DeliveryAddress.StreetAddress;
            address += " " + shipmentAddress[i].DeliveryAddress.DeliveryZip;
            waypts.push({
                location: address, 
                stopover: true
            });

        }


        directionsService.route({
            origin: { lat: 42.948650, lng: -87.909540 },
            destination: { lat: 42.948650, lng: -87.909540 },
            waypoints: waypts,
            optimizeWaypoints: true,
            travelMode: 'DRIVING'
        }, function (response, status) {
            if (status === 'OK') {
                directionsRenderer.setDirections(response);
                var route = response.routes[0];
                var summaryPanel = document.getElementById('directions-panel');
                summaryPanel.innerHTML = '';
                // For each route, display summary information.
                for (var i = 0; i < route.legs.length; i++) {
                    var routeSegment = i + 1;
                    summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment + '</b><br>';
                    summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                    summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                    summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                }
            }
            else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    }

</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAaAb-id1OeEi4iXDdGL4Y28QnM8i5e96w&callback=initMap">
</script>
