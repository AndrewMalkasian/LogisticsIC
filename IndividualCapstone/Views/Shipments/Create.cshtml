@model IndividualCapstone.Models.Shipment
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal"></div>
    <h4>Shipment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <h1>Pieces</h1>
    <div class="form-group">
        @Html.LabelFor(model => model.Package.PieceCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Package.PieceCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Package.PieceCount, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Package.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Package.Weight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Package.Weight, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Package.Length, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Package.Length, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Package.Length, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Package.Width, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Package.Width, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Package.Width, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Package.Height, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Package.Height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Package.Height, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Package.DimFactor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Package.DimFactor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Package.DimFactor, "", new { @class = "text-danger" })
        </div>

    </div>
    <h1>Pickup Address</h1>
    <div class="form-group">
        @Html.LabelFor(model => model.PickupAddress.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.PickupAddress.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PickupAddress.StreetAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PickupAddress.PickupZip, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.PickupAddress.PickupZip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PickupAddress.PickupZip, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PickupAddress.PickupDate, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.PickupAddress.PickupDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PickupAddress.PickupDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <h1>Delivery Address</h1>
    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryAddress.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeliveryAddress.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeliveryAddress.StreetAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryAddress.DeliveryZip, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeliveryAddress.DeliveryZip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeliveryAddress.DeliveryZip, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryAddress.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeliveryAddress.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeliveryAddress.DeliveryDate, "", new { @class = "text-danger" })
            @*@Html.ActionLink("Submit Name", "ActionName", "ControllerName,", null, new { @id = "SubmitName" })*@
        </div>
    </div>
    <h1>Service Level Times</h1>
    <div class="form-group">
        @Html.LabelFor(model => model.LevelOfServiceList, "TypeOfServiceLevel", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("TypeOfServiceLevel", new SelectList(Model.LevelOfServiceList, "Id", "TypeOfServiceLevel"), new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.ServiceLevelId, new SelectList(Model.LevelOfServiceList, "Id", "TypeOfServiceLevel"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LevelOfServiceList, "", new { @class = "text-danger" })
            @*@Html.ActionLink("Submit Name", "ActionName", "ControllerName,", new { @id = "SubmitName" }, null)*@
        </div>
    </div>
  
    @*@Html.DropDownList("DropDownFirstNames", new SelectList(Model.FirstNames, "ID", "Name"))
    @Html.DropDownList("DropDownLastNames", new SelectList(Model.LastNames, "ID", "Name"))
    @Html.ActionLink("Submit name", "ActionName", "ControllerName", null, new { @id = "SubmitName" })*@

    @*<script type="text/javascript">
    $('#SubmitName').click(function () {
        var first = $('#DropDownFirstNames').val();
        var last = $('#DropDownLastNames').val();
        var path = '@Url.Content("~/ControllerName/ActionName")' + "?firstId=" + first + "+&lastId=" + last
        $(this).attr("href", path);
    });
    </script>*@

    <h1>Service Type</h1>
    <div class="form-group">
        @Html.LabelFor(model => model.ServiceTypeList, "Service Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("NameOfService", new SelectList(Model.ServiceTypeList, "Id", "NameOfService"), new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.ServiceTypeId, new SelectList(Model.ServiceTypeList, "Id", "NameOfService"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ServiceTypeList, "", new { @class = "text-danger" })
            @*@Html.ActionLink("Submit Name", "ActionName", "ControllerName,", new { @id = "SubmitName" }, null)*@
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
