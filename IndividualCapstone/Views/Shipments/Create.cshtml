@model IndividualCapstone.Models.ShipmentPackageAddressDelAndPickupViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal"></div>
    <h4>Shipment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <h1>Pieces</h1>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.Package.PieceCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.Package.PieceCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.Package.PieceCount, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.Package.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.Package.Weight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.Package.Weight, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.Package.Length, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.Package.Length, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.Package.Length, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.Package.Width, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.Package.Width, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.Package.Width, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.Package.Height, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.Package.Height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.Package.Height, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.Package.DimFactor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.Package.DimFactor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.Package.DimFactor, "", new { @class = "text-danger" })
        </div>
    </div>
    <h1>Pickup Address</h1>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.PickupAddress.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.PickupAddress.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.PickupAddress.StreetAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.PickupAddress.PickupZip, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.PickupAddress.PickupZip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.PickupAddress.PickupZip, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.PickupAddress.PickupDate, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.PickupAddress.PickupDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.PickupAddress.PickupDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <h1>Delivery Address</h1>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.DeliveryAddress.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.DeliveryAddress.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.DeliveryAddress.StreetAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.DeliveryAddress.DeliveryZip, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.DeliveryAddress.DeliveryZip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.DeliveryAddress.DeliveryZip, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Shipment.DeliveryAddress.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Shipment.DeliveryAddress.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Shipment.DeliveryAddress.DeliveryDate, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Shipment.ServiceLevel, "TypeOfServiceLevel", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeOfServiceLevel", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Shipment.ServiceLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Shipment.ServiceType, "NameOfServiceType", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NameOfServiceType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Shipment.ServiceType, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
