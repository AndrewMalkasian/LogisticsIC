@model List<IndividualCapstone.Models.Shipment>


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

@using (Html.BeginForm())
{
<div>
    <div class="row">
        <div class="col-2 mx-auto">
            @Html.DisplayNameFor(model => Model[0].AddToRoute)
        </div>
        <div class="col-2 mx-auto">
            @Html.DisplayNameFor(model => Model[0].DeliveryAddress.DeliveryZip)
        </div>
        <div class="col-2 mx-auto">
            @Html.DisplayNameFor(model => Model[0].PickupAddress.PickupZip)
        </div>

        <div class="col-2 mx-auto">
            @Html.DisplayNameFor(model => Model[0].ServiceLevel.TypeOfServiceLevel)
        </div>
        <div class="col-2 mx-auto">
            @Html.DisplayNameFor(model => Model[0].ServiceType.NameOfService)
        </div>
        <div class="col-2 mx-auto">
            @Html.DisplayNameFor(model => Model[0].ShipmentCost)
        </div>


    </div>

    @for (int i = 0; i < Model.Count(); i++)
    {

        @Html.HiddenFor(modelItem => Model[i].Id)
        @Html.HiddenFor(modelItem => Model[i].DeliveryAreaId)
        @Html.HiddenFor(modelItem => Model[i].distanceBetweenHubAndAirport)
        @Html.HiddenFor(modelItem => Model[i].DistanceForDelivery)
        @Html.HiddenFor(modelItem => Model[i].DistanceForFinalMile)
        @Html.HiddenFor(modelItem => Model[i].DistanceForPickup)
        @Html.HiddenFor(modelItem => Model[i].HubLatLong)
        @Html.HiddenFor(modelItem => Model[i].LevelOfServiceList)
        @Html.HiddenFor(modelItem => Model[i].QuoteId)
        @Html.HiddenFor(modelItem => Model[i].ServiceLevelId)
        @Html.HiddenFor(modelItem => Model[i].ServiceTypeId)
        @Html.HiddenFor(modelItem => Model[i].ServiceTypeList)
        @Html.HiddenFor(modelItem => Model[i].ShipmentCost)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.Id)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.AddressLatLong)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.AddToRoute)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.DeliveryDate)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.DeliveryTimeWindow)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.DeliveryZip)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.Shipments)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.StreetAddress)

        @Html.HiddenFor(model => Model[i].DeliveryArea.Id)
        @Html.HiddenFor(model => Model[i].DeliveryArea.NameOfServiceArea)
        @Html.HiddenFor(model => Model[i].DeliveryArea.CostOfServiceAreaPoint)
        @Html.HiddenFor(model => Model[i].DeliveryArea.Distance)

        @Html.HiddenFor(model => Model[i].DeliveryAddress.Shipments)
        @Html.HiddenFor(model => Model[i].DeliveryAddress.StreetAddress)
        @Html.HiddenFor(modelItem => Model[i].PickupAddress.AddressLatLong)
        @Html.HiddenFor(modelItem => Model[i].DeliveryAddress.AddressLatLong)
        @Html.HiddenFor(modelItem => Model[i].Quote.PickupCost)
        @Html.HiddenFor(modelItem => Model[i].Quote.DeliveryCost)



        <div class="row">
            <div class="col-2 text-center">
                @Html.CheckBoxFor(modelItem => Model[i].AddToRoute)
            </div>
            <div class="col-2">
                @Html.DisplayFor(modelItem => Model[i].DeliveryAddress.DeliveryZip)
                @Html.HiddenFor(modelItem => Model[i].DeliveryAddress.DeliveryZip)
            </div>
            <div class="col-2">
                @Html.DisplayFor(modelItem => Model[i].PickupAddress.PickupZip)
                @Html.HiddenFor(modelItem => Model[i].PickupAddress.PickupZip)

            </div>
            <div class="col-2">
                @Html.DisplayFor(modelItem => Model[i].ServiceLevel.TypeOfServiceLevel)
                @Html.HiddenFor(modelItem => Model[i].ServiceLevel.TypeOfServiceLevel)
            </div>
            <div class="col-2">
                @Html.DisplayFor(modelItem => Model[i].ServiceType.NameOfService)
                @Html.HiddenFor(modelItem => Model[i].ServiceType.NameOfService)

            </div>
            <div class="col-2">
                @Html.DisplayFor(modelItem => Model[i].ShipmentCost)
                @Html.HiddenFor(modelItem => Model[i].ShipmentCost)


            </div>
            @*<div>
                @Html.ActionLink("Edit", "Edit", "Shipment", new { id = Model[i].Id }) |
                @Html.ActionLink("Details", "Details", "Shipment", new { id = Model[i].Id }) |
                @Html.ActionLink("Delete", "Delete", "Shipment", new { id = Model[i].Id }) |*@

        </div>
    }
</div>
    
    <div>
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default btn-primary" />
        </div>
    </div>
}
@*<script>

        $('.btn btn-default').click(function () {
            $.ajax({
                url: '/Shipments/Mapping',
                type: 'post',
                data: FormData,
                success: function (data) {
                    if ($(".toggle").is(':checked'))
                    {
     // Code in dive case checkbox is checked.
                        var IsRouted =  @Model.Select(s => s.DeliveryAddress.AddToRoute = divue)

                    }
                    else
                    {
                 // Code in dive case checkbox is NOT checked.
                    }
                }

            });
        });
    </script>*@

@*var listOfShipments =  @Model.Select(s => new { s.DeliveryAddress.AddressLatLong }).ToList();*@



